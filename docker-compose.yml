version: "3"
services:
  api-server:
    image: node:16
    working_dir: /var/www
    volumes:
      - .:/var/www
    links:
      - statsd:statsd
    labels:
      traefik.frontend.rule: "Host: api.cesieats.loc;"
      traefik.port: "8000"
    depends_on:
      - mongo
    command: npm run start && npm install
  user-vue:
    image: node:16
    labels:
      traefik.frontend.rule: "Host: user.cesieats.loc;"
      traefik.port: "8080"
    command: npm run serve && npm install
    working_dir: /var/www/user
    volumes:
      - ../cesieats_front/user:/var/www/user
  tech-vue:
    image: node:16
    labels:
      traefik.frontend.rule: "Host: tech.cesieats.loc;"
      traefik.port: "8080"
    command: npm run serve && npm install
    working_dir: /var/www/tech
    volumes:
      - ../cesieats_front/tech:/var/www/tech
  restaurant-vue:
    image: node:16
    labels:
      traefik.frontend.rule: "Host: restaurant.cesieats.loc;"
      traefik.port: "8080"
    command: npm run serve && npm install
    working_dir: /var/www/restaurant
    volumes:
      - ../cesieats_front/restaurant:/var/www/restaurant
  deliverer-vue:
    image: node:16
    labels:
      traefik.frontend.rule: "Host: deliverer.cesieats.loc;"
      traefik.port: "8080"
    command: npm run serve && npm install
    working_dir: /var/www/deliverer
    volumes:
      - ../cesieats_front/deliverer:/var/www/deliverer
  dev-vue:
    image: node:16
    labels:
      traefik.frontend.rule: "Host: dev.cesieats.loc;"
      traefik.port: "8080"
    command: npm run serve && npm install
    working_dir: /var/www/dev
    volumes:
      - ../cesieats_front/dev:/var/www/dev
  com-vue:
    image: node:16
    labels:
      traefik.frontend.rule: "Host: com.cesieats.loc;"
      traefik.port: "8080"
    command: npm run serve && npm install
    working_dir: /var/www/com
    volumes:
      - ../cesieats_front/com:/var/www/com
  traefik:
    image: traefik:1.6@sha256:eabb39016917bd43e738fb8bada87be076d4553b5617037922b187c0a656f4a4
    restart: always
    command:
      - --api
      - --docker
      - --docker.watch
      - --logLevel=INFO
      - --web
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mongo:
    image: mongo:3.6.19-xenial
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
  statsd:
    image: hopsoft/graphite-statsd
    ports:
      - "3002:80"
      - "2003:2003"
      - "8125:8125/udp"
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
volumes:
  mongo-data:
    driver: local
